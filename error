Что делать с файлами
Большинство файлов можно будет открыть при помощи Excel (.xls, .xlsx, .csv с нормальным распределением столбцов). Остальное нужно открывать либо просто блокнотом, либо с помощью Notepad++.
Самые частые ошибки и что с ними делать:
Разный формат написания ФИО («Кудряшов Марк Даниилович»/ «Кудряшов» «Марк» «Даниилович»):
Встречается только в неструктурированных файлах и максимально портит таблицу, поскольку делает так, что в разных строках получается разное количество столбцов. Обычно именно из-за этого не получается открыть .csv файл в Экселе. В неструктурированном файле исправляется только руками, либо добавить разделители, либо убрать.
Разный формат написания даты («21.02.2024»/ «21 февраля 2024»/ «02.21.2024», иногда в конце подписано «год» или «г.»):
Нужно привести все к одному формату, обычно это просто дд.мм.гггг без подписей и всего прочего. Подписи убираются через замену. Для прописанных месяцев заменить их вместе с пробелами вокруг на цифру с точками (« февраля » -> «.02.»). Американский формат исправляется руками.
Разное написание пола («м»/ «муж»/ «мужской»):
Проще всего свести все написания к одной букве. Заменить варианты написания на нужное («мужской» -> «м»).
Единицы измерения:
Обычно проблема заключается в том, что единицы измерения подписаны, хотя в них нет необходимости. Их проще всего убрать через замену. Кроме знаков валют: они читаются не как просто знаки, а как сочетание символов, и это приводит к тому, что, если их убрать, вместе с ними удаляются все пробелы. 
Реже бывает ситуация, когда существует отдельный столбец под единицы измерения, но в некоторых местах число не отделено от них. Такая ситуация встречается только в неструктурированных файлах и точно так же, как и разное написание ФИО, приводит к тому, что их нельзя открыть в Excel. Исправляется тоже руками.
Время в разных единицах:
Ошибка редкая, но может быть очень неприятной. Обычно будет написано, в какую единицу нужно привести, в обратном случае выбирайте любую, желательно, не дробную. Переводить лучше при помощи калькулятора и замены.
Список в ячейке:
Самая сложная и неприятная ошибка, требующая больше всего сил и времени, но при этом отнимающая наибольшее количество баллов, если не исправить. Столбец с такими ячейками нужно превратить в новую таблицу:
Вырезать столбец и перенести в другое место/на другой лист/в другой файл.
Разделить на столбцы по разделителю.
Если нужно, заменить имена на нормальные ключи. Это можно сделать руками, при помощи формулы с ВПР, или исправить уже после импорта.

Как импортировать данные
Есть два способа: более правильный и более простой. Они так же требуют разной подготовки.
Более правильный:
Подготовка: Создать БД (таблицы можно не прописывать).
Импорт неструктурированного файла
Чтобы сделать импорт неструктурированного файла (.txt и .csv), нажмите правой кнопкой по имени вашей БД, в меню выберите «Задачи» -> «Импорт неструктурированного файла».

	Выберите нужный файл. Если вас не устраивает название таблицы, можете его поменять. Если у вас есть другая схема, которую вы создали для демо (но зачем), выберите её. Если вы не знаете, что такое схема или не делали новых, оставьте dbo.

	Тщательно просмотрите данные. Здесь можно увидеть, пропустили ли вы что-нибудь, когда редактировали документ, потому что в случае ошибки полетят все столбцы. Если сбилась кодировка – поменяйте её в notepad`е на LE-BOM.

	Проверьте, чтобы типы столбцов были нужными вам. Если они не совпадают (например, столбец с числом подписан как текстовый), значит, скорее всего, есть ошибка в данных. В некоторых пределах типы столбцов можно редактировать, например, заменить int на любой другой численный формат, в т.ч. money. Если вы собираетесь дальше работать с этой таблицей, не перенося данные, проставьте первичные ключи (по возможности). Первичным ключом может быть артикул, ИНН или КПП, но они обычно длинные, и с ними может быть неудобно работать. Проставьте, какие столбцы могут иметь значение NULL, если такие есть.

	Сводка просто повторит базовые сведения: что за файл, куда импортируем, под каким именем. Ее, в большинстве случаев, можно почти полностью игнорировать. Нажмите «Готово» и ждите результатов. Если нет ошибок – поздравляю, импорт закончен. Если начинают появляться ошибки, есть, обычно, три причины: проблема в данных, попытка каким-то странным способом изменить тип столбца и проблемы самой программы.  С первыми двумя вы можете справиться, ради третьего зовите наблюдающих.

Импорт данных
	Чтобы сделать импорт данных (.xls и .xlsx), нажмите правой кнопкой по имени вашей БД, в меню выберите «Задачи» -> «Импорт данных».

В качестве источника данных выберите «Microsoft Excel» и найдите нужный файл. Если в первой строке даны названия столбцов, поставьте галочку. 

	В качестве назначения выберите «SQL Server Native Client» (находится внизу списка). Обычно ничего дальше менять не надо, имя сервера и БД подставятся автоматически.

Если вы уверены, что сможете сразу написать нужный запрос, который вытащит ваши данные, выберите второй вариант. Если нет, оставляйте первый. 

Далее нужно выбрать, какие листы из эксель файла вы хотите перенести в базу. Здесь же можно дать нормальное название таблицам или выбрать существующую, в которую будут перенесены данные.

Если нажать на кнопку «Просмотр», можно посмотреть, в каком виде будут вставлены данные. Советую это сделать, чтобы ещё раз убедиться в том, что вы все отредактировали.

Дальше можно просто со всем соглашаться и нажать «Finish». Если в конце всё успешно, то отлично, импорт закончен. Если нет – скорее всего, либо ошибка в данных, либо вы что-то не так выбрали/настроили во время импорта, либо Management studio не может достать файл, тогда его нужно попробовать импортировать из другого места. Обычно он говорит, где случилась ошибка, а иногда и какая. Если же это точно проблема самого Management studio.

Простой способ:
Подготовка: Сделать БД целиком, со всеми таблицами. Столбцы в таблицах на импорт должны совпадать со столбцами в таблицах БД.
Импорт
Открыть вкладку «Изменить следующие 200 строк» для нужной таблицы.
Скопировать данные целиком, вместе с верхней строчкой с именами.
Нажать на уголок таблицы, вставить данные.
При ошибке внимательно прочитать, что за ошибка, снести вставленные строки, если нужно, ресетнуть identity (запрос: DBCC CHECKIDENT (*название таблицы*, RESEED, 0)), попробовать снова.

SQL-запросы для импорта
После импорта иногда нужно будет писать запросы. Частые варианты приведены ниже:
Добавление первичного ключа к таблице
Для добавления столбца к существующей таблице используется alter table
alter table *таблица*
add *название столбца* *тип столбца*
Пример добавления столбца с первичным ключом:
alter table Client
add ID int identity(1,1) primary key
Да, он будет стоять не первой колонкой, но функцию свою выполнять будет. Просто прописывайте столбцы в запросах, чтобы наверняка. Identity работает и для уже заполненных таблиц.
Если нужно сделать уже существующее поле (или несколько) первичным ключом, можно воспользоваться
alter table *таблица*
add primary key (*перечисление столбцов*)
Замена названий на id
В таком случае проще создать новую таблицу с правильными не только данными, но и типами в столбцах, а потом вставить в неё результаты подобного запроса:
insert into *новая таблица* (*поля новой таблицы*)
select *таблица с ID*.ID, *старая таблица*.*данные, которые переносятся*
from *старая таблица*, *таблица с ID*
where *старая таблица*.*название* = *таблица с ID*.*название*
Пример для замены двух столбцов:
insert into ClientService (ClientID, StartTime, ServiceID)
select client.ID, client_service_import.[Начало оказания услуги], [Service].ID
from client_service_import, Client, [Service]
where client_service_import.[Клиент] = client.LastName
and client_service_import.[Услуга] = [Service].Title
Перенос данных в существующую таблицу
Этот запрос используется, например, когда были даны скрипт и данные для импорта, либо, если есть время/желание или так понятнее, можно так перенести в новые таблицы все данные.
insert into *новая таблица* (*поля таблицы*)
select (*соответствующие поля таблицы*) from *таблица с импортом*
Пример вставки:
insert into [Service] (Title, DurationInSeconds, Cost, Discount)
select * from service_b_import
Добавление внешнего ключа
Добавление внешнего ключа к существующей таблице делается через команду alter table
alter table *название таблицы* 
add foreign key *название столбца* references *другая таблица*(*название столбца*)
Пример:
alter table Invoice 
add foreign key (CustomerID) references Customer(CustomerID)
